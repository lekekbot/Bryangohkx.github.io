@import url(https://fonts.googleapis.com/css?family=Open+Sans:800);

// How many menu items do we have?
$menu-items: 5;

// Colours
$background-color: #212529;
$indicator-color: #e82d00;

// Transition Speed
$transition-speed: 1.3s;

// Dynamic Variables
$width: (100/$menu-items) * 1%; // makes each item the right size
$menu-items-loop-offset: $menu-items - 1; // the number of items in the menu

@media screen and (min-width: 768px) {
    .PrimaryNav {
        @extend %cf; // clear the floats
        list-style: none;
        max-width: 550px; // As all measurements are using % this could be a flexible value.
        padding: 0;
        width: 100%;
    }

    .nav-item {
        background: #212529 !important;
        display: block;
        float: left;
        margin: 0;
        padding: 0;
        width: $width; //dynamic width
        text-align: center;

        &:first-child {
            border-radius: 3px 0 0 3px;
        }

        &:last-child {
            border-radius: 0 3px 3px 0;
        }

        &.is-active a {
            color: $indicator-color;
        }

        a {
            color: $background-color;
            display: block;
            // padding-top: 20px;
            // padding-bottom: 20px;
            text-decoration: none;

            &:hover {
                color: $indicator-color;
            }
        }
    }

    .with-indicator {
        position: relative; // the menu is "relative" to the absolute position last-child pseudo elements.
        z-index: 0;

        .nav-item {
            &:last-child {

                &:before,
                &:after {
                    content: '';
                    display: block;
                    position: absolute;
                    pointer-events: none;
                    transition: left #{$transition-speed} ease;
                }

                &:before {
                    border: 6px solid transparent;
                    border-top-color: $indicator-color;
                    width: 0;
                    height: 0;
                    top: 0;
                    left: ($width/2);
                    margin-left: -3px;
                }

                &:after {
                    background: $indicator-color;
                    top: -6px;
                    bottom: -6px;
                    left: 0;
                    width: $width;
                    z-index: -1;
                }


            }

        }

        @for $i from 1 through $menu-items-loop-offset {

            // when the Nav item "is active", make the indicator line up with the navigation item.
            .nav-item:nth-child(#{$i}).is-active~.nav-item:last-child:after {
                left: ($width*$i)-$width;
            }

            .nav-item:nth-child(#{$i}).is-active~.nav-item:last-child:before {
                left: ($width*$i)+($width/2)-$width; // this ensures the triangle lines up to the menu.
            }
        }

        @for $i from 1 through $menu-items-loop-offset {

            // We have to use !important to make the hovers overide if the last:child is the active or hovered
            .nav-item:nth-child(#{$i}):hover~.nav-item:last-child:after {
                left: ($width*$i)-$width !important;
            }

            .nav-item:nth-child(#{$i}):hover~.nav-item:last-child:before {
                left: ($width*$i)+($width/2)-$width !important;
            }

        }

        // this could be nested in the original .Nav-item
        .nav-item {
            &:last-child {

                // make sure the last-child talks to itself
                &:hover,
                &.is-active {
                    &:before {
                        // we have to use important because the sibling selctor is more specific.
                        left: (100%-$width)+($width/2) !important;
                    }

                    &:after {
                        left: 100%-$width !important;
                    }
                }
            }
        }

    }

    *,
    *:before,
    *:after {
        box-sizing: border-box;
    }

    %cf:before,
    %cf:after {
        content: " ";
        display: table;
    }

    %cf:after {
        clear: both;
    }

    .toggle {
        color: #fff;
        font-family: sans-serif;
        text-align: center;
    }
}